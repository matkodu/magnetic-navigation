<?xml version="1.0"?>

<robot name="mmcuav" xmlns:xacro="http://ros.org/wiki/xacro">
  <!--
  It seems that the xacro:property does not allow to use substitution args. Therefore, instead xacro parameter ${namespace}, subsitution argument is used $(arg name). This is 
  <xacro:property name="namespace" value="$(arg name)" />
  -->

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/$(arg name)</robotNamespace>
      <robotParam>/$(arg name)/robot_description </robotParam>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  <xacro:property name="enable_bag_plugin" value="false" />
  <xacro:property name="bag_file" value="mmuav.bag" />

  <!-- Instantiate mmuav "mechanics" -->
  <xacro:include filename="$(find mmuav_description)/urdf/mmcuav_rope.base.urdf.xacro" />
  <xacro:include filename="$(find rotors_description)/urdf/component_snippets.xacro" />

  <!-- Create link and joint for a sensor -->
  <link name="pose_sensor1_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0"
        izz="0.00001" />
      <mass value="0.01" />
    </inertial>
  </link>
  <joint name="pose_sensor1_joint" type="revolute">
    <parent link="base_link" />
    <origin xyz="0 0 0" rpy="0 0 0" />
    <child link="pose_sensor1_link" />
    <limit upper="0" lower="0" effort="0" velocity="0" />
  </joint>

  <!-- Mount an IMU -->
  <gazebo>
    <!-- IMU -->
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_ros">
      <!-- parameters according to http://wiki.ros.org/hector_gazebo_plugins#GazeboRosImu -->
      <!-- robotNamespace>${namespace}</robotNamespace -->
      <robotNamespace>$(arg name)</robotNamespace>
      <bodyName>imu_link</bodyName> <!-- (string, required): name of the body which holds the IMU sensor -->
      <topicName>imu</topicName> <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <accelOffset>0.0 0.0 0.0</accelOffset> <!-- (Vector3): constant acceleration offset -->
      <accelDrift>0.0 0.0 0.0</accelDrift> <!-- (Vector3): standard deviation of the acceleration drift error -->
      <accelDriftFrequency>0.0 0.0 0.0</accelDriftFrequency> <!-- (Vector3): mean frequency of the acceleration drift staviti na nulu-->
      <accelGaussianNoise>0.001 0.001 0.001</accelGaussianNoise> <!-- (Vector3): standard deviation of the additive Gaussian acceleration noise -->
      <rateOffset>0.0 0.0 0.0</rateOffset> <!-- (Vector3): constant rate offset -->
      <rateDrift>0.0 0.0 0.0</rateDrift> <!-- (Vector3): standard deviation of the rate drift error -->
      <rateDriftFrequency>0.0 0.0 0.0</rateDriftFrequency> <!-- (Vector3): mean frequency of the rate drift  staviti na nulu-->
      <rateGaussianNoise>0.0001 0.0001 0.0001</rateGaussianNoise> <!-- (Vector3): standard deviation of the additive Gaussian rate noise -->
      <headingOffset>0.0</headingOffset> <!-- (double): constant heading offset -->
      <headingDrift>0.0</headingDrift> <!-- (double): standard deviation of the heading drift error -->
      <headingDriftFrequency>0.0</headingDriftFrequency> <!-- (double): mean frequency of the heading drift  staviti na nulu-->
      <headingGaussianNoise>0.0</headingGaussianNoise> <!-- (double): standard deviation of the heading additive Gaussian noise -->
      <rpyOffsets>0.0 0.0 0.0</rpyOffsets> <!-- (Vector3): if non-zero, used to calculate accelOffset and headingOffset so that resulting roll, pitch and yaw errors correspond to this values when the platform is leveled (for compatibility with gazebo_plugins) -->
    </plugin>
  </gazebo>
  
  
  <!-- Mount first generic pose sensor-->
  <xacro:odometry_plugin_macro
    namespace="$(arg name)"
    odometry_sensor_suffix="1"
    child_frame_id="base"
    parent_link="base_link"
    pose_topic="pose"
    pose_with_covariance_topic="pose_with_covariance"
    position_topic="position"
    transform_topic="transform"
    odometry_topic="odometry"
    parent_frame_id="world"
    mass_odometry_sensor="0.01"
    measurement_divisor="10"
    measurement_delay="10"
    unknown_delay="0.0"
    noise_normal_position="0.0 0.0 0.0"
    noise_normal_quaternion="0.0 0.0 0.0"
    noise_normal_linear_velocity="0 0 0"
    noise_normal_angular_velocity="0 0 0"
    noise_uniform_position="0 0 0"
    noise_uniform_quaternion="0 0 0"
    noise_uniform_linear_velocity="0 0 0"
    noise_uniform_angular_velocity="0 0 0"
    enable_odometry_map="false"
    odometry_map=""
    image_scale="0.1">
    <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" /> <!-- [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] -->
    <origin xyz="-0.0 0.0 0" rpy="0.0 0.0 0.0" />
  </xacro:odometry_plugin_macro>

  <!-- Mount load generic pose sensor-->
  <xacro:odometry_plugin_macro
    namespace="$(arg name)"
    odometry_sensor_suffix="2"
    child_frame_id="base"
    parent_link="load"
    pose_topic="load_pose"
    pose_with_covariance_topic="load_pose_with_covariance"
    position_topic="load_position"
    transform_topic="load_transform"
    odometry_topic="load_odometry"
    parent_frame_id="world"
    mass_odometry_sensor="0.01"
    measurement_divisor="10"
    measurement_delay="10"
    unknown_delay="0.0"
    noise_normal_position="0.0 0.0 0.0"
    noise_normal_quaternion="0.0 0.0 0.0"
    noise_normal_linear_velocity="0 0 0"
    noise_normal_angular_velocity="0 0 0"
    noise_uniform_position="0 0 0"
    noise_uniform_quaternion="0 0 0"
    noise_uniform_linear_velocity="0 0 0"
    noise_uniform_angular_velocity="0 0 0"
    enable_odometry_map="false"
    odometry_map=""
    image_scale="0.1">
    <inertia ixx="1e-8" ixy="0.0" ixz="0.0" iyy="1e-8" iyz="0.0" izz="1e-8" /> <!-- [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] -->
    <origin xyz="-0.0 0.0 0" rpy="0.0 0.0 0.0" />
  </xacro:odometry_plugin_macro>

  <!-- Add a wind gust starting at 40s and lasting for 2s. -->
  <xacro:wind_plugin_macro
    namespace="$(arg name)"
    xyz_offset="0 0 0"
    wind_direction="1 0 0"
    wind_force_mean="0"
    wind_gust_direction="0.7926 0 0.6097"
    wind_gust_duration="0.01"
    wind_gust_start="20"
    wind_gust_force_mean="200.0"
    wind_gust_force_variance="0"
    affect_link="load">
  </xacro:wind_plugin_macro>

  <!--xacro:wind_plugin_macro
    namespace="$(arg name)"
    xyz_offset="0 0 0"
    wind_direction="1 0 0"
    wind_force_mean="0"
    wind_gust_direction="0.7926 0 0.6097"
    wind_gust_duration="0.01"
    wind_gust_start="70"
    wind_gust_force_mean="100.0"
    wind_gust_force_variance="0"
    affect_link="load">
  </xacro:wind_plugin_macro>

  <xacro:wind_plugin_macro
    namespace="$(arg name)"
    xyz_offset="0 0 0"
    wind_direction="1 0 0"
    wind_force_mean="0"
    wind_gust_direction="0.7926 0 0.6097"
    wind_gust_duration="0.01"
    wind_gust_start="130"
    wind_gust_force_mean="150.0"
    wind_gust_force_variance="0"
    affect_link="load">
  </xacro:wind_plugin_macro>

  <xacro:wind_plugin_macro
    namespace="$(arg name)"
    xyz_offset="0 0 0"
    wind_direction="1 0 0"
    wind_force_mean="0"
    wind_gust_direction="0.7926 0 0.6097"
    wind_gust_duration="0.01"
    wind_gust_start="310"
    wind_gust_force_mean="175.0"
    wind_gust_force_variance="0"
    affect_link="load">
  </xacro:wind_plugin_macro>

  <xacro:wind_plugin_macro
    namespace="$(arg name)"
    xyz_offset="0 0 0"
    wind_direction="1 0 0"
    wind_force_mean="0"
    wind_gust_direction="0.7926 0 0.6097"
    wind_gust_duration="0.01"
    wind_gust_start="170"
    wind_gust_force_mean="200.0"
    wind_gust_force_variance="0"
    affect_link="load">
  </xacro:wind_plugin_macro>

  <xacro:wind_plugin_macro
    namespace="$(arg name)"
    xyz_offset="0 0 0"
    wind_direction="1 0 0"
    wind_force_mean="0"
    wind_gust_direction="0.7926 0 0.6097"
    wind_gust_duration="0.01"
    wind_gust_start="210"
    wind_gust_force_mean="225.0"
    wind_gust_force_variance="0"
    affect_link="load">
  </xacro:wind_plugin_macro>

  <xacro:wind_plugin_macro
    namespace="$(arg name)"
    xyz_offset="0 0 0"
    wind_direction="1 0 0"
    wind_force_mean="0"
    wind_gust_direction="0.7926 0 0.6097"
    wind_gust_duration="0.01"
    wind_gust_start="250"
    wind_gust_force_mean="300.0"
    wind_gust_force_variance="0"
    affect_link="load">
  </xacro:wind_plugin_macro-->

</robot>